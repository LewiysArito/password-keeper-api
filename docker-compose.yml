services:
    db:
        image: postgres:15-alpine
        container_name: postgres-server
        restart: unless-stopped
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "${POSTGRES_EXTERNAL_PORT:-5454}:5432"
        volumes:
            - pg_data:/var/lib/postgresql/data/
            - pg_conf:/etc/postgresql
            - pg_log:/var/log/postgresql
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 5s
            timeout: 5s
            retries: 5
            
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: password-base-server
        env_file:
            - ./.env
        command:
            [
                "poetry",
                "run",
                "uvicorn",
                "main:app",
                "--host",
                "0.0.0.0",
                "--port",
                "${DOCKER_PROJECT_PORT_SERVER:-8000}",
                "--reload",
                "--log-level",
                "debug",
                "--use-colors",
            ]
        ports:
            - ${DOCKER_PROJECT_EXTERNAL_PORT:-8000}:${PROJECT_PORT:-8000}
        volumes:
            - .:/project
        depends_on:
            db:
                condition: service_healthy

    redis:
        image: redis:8.0-bookworm
        restart: unless-stopped
        container_name: redis-server
        ports:
            - "${DOCKER_REDIS_EXTRENAL_PORT:-6380}:6379"
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_LOGIN=${REDIS_LOGIN}
        volumes:
            - redis_data:/data

volumes:
    pg_data:
        driver: local
    pg_conf:
        driver: local
    pg_log:
        driver: local
    redis_data:
        driver: local
